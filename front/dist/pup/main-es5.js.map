{"version":3,"sources":["webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/posts/posts.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/rate/rate.component.ts","webpack:///src/app/rate/rate.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/posts/post-create/mime-type.validator.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/posts/post-create/post-create.component.ts","webpack:///src/app/posts/post-create/post-create.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PostListComponent","postsService","posts","isLoading","getPosts","postsSub","getPostUpdateListener","subscribe","console","log","postId","deletePost","unsubscribe","selector","templateUrl","styleUrls","environment","production","apiURL","AppComponent","PostsService","http","router","postsUpdated","get","pipe","postData","map","post","title","content","id","_id","imagePath","rates","transformedPosts","next","asObservable","name","breed","image","pupData","put","response","FormData","append","responseData","push","navigate","updatedPosts","filter","providedIn","AppModule","declarations","imports","providers","bootstrap","RateComponent","pupsService","route","pups","getP","pupsSub","event","ratePup","ngOnInit","rateLPup","rateRPup","HeaderComponent","skipLocationChange","onSubmitRate","onSubmitList","onSubmitCreate","mimeType","control","value","file","fileReader","FileReader","frObs","create","observer","addEventListener","arr","Uint8Array","result","subarray","header","isValid","i","length","toString","invalidMimeType","complete","readAsArrayBuffer","routes","path","component","AppRoutingModule","forRoot","exports","PostCreateComponent","enteredTitle","enteredContent","mode","form","validators","required","minLength","asyncValidators","paramMap","has","target","files","patchValue","updateValueAndValidity","reader","onload","imagePreview","readAsDataURL","invalid","addPost","reset","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from 'rxjs';\n\n\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"]\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   { title: \"First Post\", content: \"This is the first post's content\" },\n  //   { title: \"Second Post\", content: \"This is the second post's content\" },\n  //   { title: \"Third Post\", content: \"This is the third post's content\" }\n  // ];\n  posts: Post[] = [];\n  isLoading = false;\n  private postsSub: Subscription;\n  url; \n\n  constructor(public postsService: PostsService) {\n   \n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts();\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n        this.isLoading = false;\n        this.posts = posts;\n      });\n      console.log(this.posts)\n  }\n\n  onDelete(postId: string) {\n   \n    this.postsService.deletePost(postId);\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<mat-card class=\"example-card center\" multi=\"true\" layout=\"center\" *ngFor=\"let post of posts; index as i \">\n  <mat-card-header>\n    \n    <mat-card-title class=\"name\">Name: {{ post.title }}</mat-card-title>\n    <mat-card-subtitle class=\"breed\">Breed: {{post.content}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image [src]=\"post.imagePath\" [alt]=\"post.title\">\n  \n  <mat-card-content>\n          \n\n  </mat-card-content>\n  <mat-card-actions class=\"rates\">\n    <b>Num: {{i + 1}}</b>\n    <br>\n    <b>Rates: {{post.rates}} </b>\n   \n  </mat-card-actions>\n  <!-- <button (click)=\"onDelete(post.id)\">Delete</button>   -->\n</mat-card>\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0 && !isLoading\">No posts added yet!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  apiURL: 'http://192.168.0.2:4000/api/posts',\n \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n\nimport { Post } from \"./post.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n//35.165.251.254:4000\n\n\n  getPosts() {\n    this.http\n      .get<{ message: string; posts: any }>(\"http://35.165.251.254:4000/api/posts\")\n      .pipe(\n        map(postData => {\n          return postData.posts.map(post => {\n            return {\n              title: post.title,\n              content: post.content,\n              id: post._id,\n              imagePath: post.imagePath, \n              rates: post.rates\n            };\n          });\n        })\n      )\n      .subscribe(transformedPosts => {\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get<{ _id: string, title: string, content: string, imagePath: string }>(\n      \"http://35.165.251.254:4000/api/posts/\" + id\n    );\n  }\n\n\n  ratePup(id: string, name: string, breed: string,  rates: number, image: string){\n\n    let pupData = {\n        id: id, \n        name: name, \n        breed: breed, \n        rates: rates, \n        image: image\n\n    }\n   \n    \n    this.http.put(\"http://35.165.251.254:4000/api/rate/\" + id, pupData)\n    \n    .subscribe(response=>{\n      console.log(response)\n     \n\n    })\n}\n\n\ngetP(){\n  this.http.get<{message:string, posts:any}>(\"http://35.165.251.254:4000/api/rate\")\n  .pipe(map((postData)=>{\n      \n      return postData.posts.map(post=>{\n          return{\n              id: post._id, \n              title: post.title, \n              content: post.content, \n      \n              imagePath: post.imagePath, \n              rates: post.rates\n          \n          }\n\n   \n      }); \n      \n  }))\n  .subscribe((transformedPosts)=>{\n     this.posts = transformedPosts\n     this.postsUpdated.next([...this.posts])\n  \n  })\n    \n  \n}\n\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append(\"title\", title);\n    postData.append(\"content\", content);\n    postData.append(\"image\", image, title);\n    this.http\n      .post<{ message: string; post: Post }>(\n        \"http://35.165.251.254:4000/api/posts\",\n        postData\n      )\n      .subscribe(responseData => {\n        const post: Post = {\n          id: responseData.post.id,\n          title: title,\n          content: content,\n          imagePath: responseData.post.imagePath, \n          rates: 0\n        };\n        this.posts.push(post);\n        this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n\n\n\n  deletePost(postId: string) {\n    console.log(\"clicked\")\n    this.http\n      .delete(\"http://35.165.251.254:4000/api/posts/\" + postId)\n      .subscribe(() => {\n        const updatedPosts = this.posts.filter(post => post.id !== postId);\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {  MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { MatInputModule} from '@angular/material/input/'\nimport { MatCardModule} from '@angular/material/card'\nimport { MatToolbarModule} from '@angular/material/toolbar'\nimport { MatExpansionModule} from '@angular/material/expansion'\nimport {AppComponent} from './app.component'\nimport { PostCreateComponent} from './posts/post-create/post-create.component'\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { RateComponent } from './rate/rate.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    RateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {NgForm, FormsModule, FormGroup, FormControl, Validators} from \"@angular/forms\"\nimport {Post} from '../posts/post.model'\nimport {PostsService} from '../posts/posts.service'\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport {Subscription} from 'rxjs'; \n\n@Component({\n  selector: 'app-rate',\n  templateUrl: './rate.component.html',\n  styleUrls: ['./rate.component.css']\n})\nexport class RateComponent implements OnInit{\n \n pups: Post[] = []\n  private pupsSub: Subscription; \n  form: FormGroup;\n  private id: String\n  name: String\n  breed:string\n  quote: string\n  rates: number\n  imagePath: string\n \n   constructor(public pupsService: PostsService, public route: ActivatedRoute) { \n    \n   }\n \n   ngOnInit() {\n\n      \n      this.pupsService.getP()\n      this.pupsSub = this.pupsService.getPostUpdateListener().subscribe((pups:Post[]) =>{\n      this.pups = pups; \n      console.log(this.pups)\n     \n      \n      }\n \n   )}\n\n   rateRPup(event, id, name, breed,  rates, imagePath){\n     this.id =  id\n      this.pupsService.ratePup(id, name, breed,  rates, imagePath)\n      \n      this.ngOnInit(); \n      \n\n    }\n\n   rateLPup(event, id, name, breed,  rates, imagePath){\n    \n      this.pupsService.ratePup(id, name, breed,  rates, imagePath)\n      \n      this.ngOnInit(); \n      \n   } \n       \n\n  }","<link href=\"https://fonts.googleapis.com/css?family=Courgette&display=swap\" rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/css?family=Courgette|Niconne&display=swap\" rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/css?family=Alegreya|Courgette|Niconne&display=swap\" rel=\"stylesheet\">\n\n\n  <h1 class=\"text-center\"><b>Select the best pup </b></h1>\n  \n\n\n\n<mat-card class=\"example-card center\" layout=\"center\" multi=\"true\">\n<!-- *ngFor=\"let pup of pups\"  -->\n        <mat-card-header>\n        \n          <mat-card-title class=\"name\">Name: {{pups[0]?.title}}</mat-card-title>\n          <mat-card-subtitle class=\"breed\">Breed: {{pups[0]?.content}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image [src]=\"pups[0]?.imagePath\" [alt]=\"pups[0]?.title\">\n        <mat-card-content>\n          \n\n        </mat-card-content>\n        <mat-card-actions>\n          <button id=\"leftButton\" mat-button (click)=\"rateLPup($event, pups[0].id, pups[0].title, pups[0].content, pups[0].rates, pups[0].imagePath)\">Best Pup</button>\n         \n        </mat-card-actions>\n      </mat-card>\n   \n     \n\n   \n      <mat-card class=\"example-card center\" >\n        <!-- *ngFor=\"let pup of pups\"  -->\n                <mat-card-header>\n                \n                  <mat-card-title class=\"name\">Name: {{pups[1]?.title}}</mat-card-title>\n                  <mat-card-subtitle class=\"breed\">Breed: {{pups[1]?.content}}</mat-card-subtitle>\n                </mat-card-header>\n                <img mat-card-image [src]=\"pups[1]?.imagePath\" [alt]=\"pups[1]?.title\">\n                <mat-card-content>\n                    \n    \n                </mat-card-content>\n                <mat-card-actions>\n                  <button id=\"rightButton\" mat-button (click)=\"rateRPup($event, pups[1].id, pups[1].title, pups[1].content, pups[1].rates, pups[1].imagePath )\">Best Pup</button>\n                 \n                </mat-card-actions>\n              </mat-card>\n           \n\n ","import { Component } from \"@angular/core\";\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  constructor(private router: Router){}\n\n  onSubmitList(){\n    this.router.navigate(['/list'], {skipLocationChange: true})\n  }\n\n  onSubmitRate(){\n    this.router.navigate(['/'], {skipLocationChange: true})\n  }\n\n  onSubmitCreate(){\n    this.router.navigate(['/create'], {skipLocationChange: true})\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span><a (click)=\"onSubmitRate()\">Pup Rate</a></span>\n  <span><a mat-button (click)=\"onSubmitList()\" routerLinkActive=\"mat-accent\">Top Pups</a></span>\n  \n    \n  <span class=\"spacer\"></span>\n  <ul>\n      <li>\n              <a mat-button (click)=\"onSubmitCreate()\" routerLinkActive=\"mat-accent\">Upload Pup</a>\n              </li>\n     \n  </ul>\n</mat-toolbar>\n\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { RateComponent } from './rate/rate.component';\n\nconst routes: Routes = [\n  { path: \"\", component: RateComponent}, \n  { path: 'list', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\n\nimport { PostsService } from \"../posts.service\";\nimport { Post } from \"../post.model\";\nimport { mimeType } from \"./mime-type.validator\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent implements OnInit {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n  post: Post;\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  private mode = \"create\";\n  private postId: string;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.isLoading = true;\n\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    console.log(this.form.value)\n    if (this.mode === \"create\") {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content, \n        this.form.value.image\n      );\n    } else {\n\n    }\n    this.form.reset();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput type=\"text\" formControlName=\"title\" placeholder=\"Pup Name\">\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter name.</mat-error>\n    </mat-form-field>\n    <div>\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n    </div>\n    <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n    </div>\n    <mat-form-field>\n      <textarea matInput rows=\"4\" formControlName=\"content\" placeholder=\"Pup Breed\"></textarea>\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter a breed.</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}